# The fields array specifies command parameter.
# - "map": is a unique name for a field. This is required since teamspeak
#   | sometimes reuses field names with different data or datatypes.
#   | We usually use the same as "ts" unless disambiguation is needed.
# - "ts": is then field name in the command as teamspeak uses it.
# - "pretty": is a high-level name for the field which should be better readable
#   | and make more sense in the object context it is used.
# - "type": Descibes a primitive type or enum which can be used for this field.
#   | We use the primitve type namings of the language 'Rust'.
# - "mod": Applies an additional modifier to this field. Current modifiers:
#   | "array": The field is a comma-seperated list and can be read as an array.

fields = [
    { map="aclid", ts="aclid", pretty="ClientId", type="ClientId" },
    { map="acn", ts="acn", pretty="ClientName", type="str" },
    { map="alpha", ts="alpha", pretty="Alpha", type="str" },
    { map="average_speed", ts="average_speed", pretty="AverageSpeed", type="f32" },
    { map="banid", ts="banid", pretty="BanId", type="u32" }, # integer, size guessed
    { map="bantime", ts="bantime", pretty="BanTime", type="DurationSeconds" },
    { map="banreason", ts="banreason", pretty="BanReason", type="str" },
    { map="begin_pos", ts="begin_pos", pretty="Offset", type="u64" }, # integer, size guessed
    { map="beta", ts="beta", pretty="Beta", type="str" },
    { map="cfid", ts="cfid", pretty="SourceChannelId", type="ChannelId" },
    { map="cgi", ts="cgi", pretty="ChannelGroupIndex", type="ChannelGroupId" },
    { map="cgid", ts="cgid", pretty="ChannelGroup", type="ChannelGroupId" }, # TODO: Consider name 'ChannelGroup' for consistency
    { map="channel_banner_gfx_url", ts="channel_banner_gfx_url", pretty="BannerGfxUrl", type="str" },
    { map="channel_banner_mode", ts="channel_banner_mode", pretty="BannerMode", type="str" }, # ?? Same as HostBannerMode maybe? There's no ui for this setting
    { map="channel_codec", ts="channel_codec", pretty="Codec", type="Codec" },
    { map="channel_codec_is_unencrypted", ts="channel_codec_is_unencrypted", pretty="IsUnencrypted", type="bool" },
    { map="channel_codec_latency_factor", ts="channel_codec_latency_factor", pretty="CodecLatencyFactor", type="i32" },
    { map="channel_codec_quality", ts="channel_codec_quality", pretty="CodecQuality", type="u8" },
    { map="channel_delete_delay", ts="channel_delete_delay", pretty="DeleteDelay", type="DurationSeconds" },
    { map="channel_description", ts="channel_description", pretty="Description", type="str" },
    { map="channel_filepath", ts="channel_filepath", pretty="FilePath", type="str" },
    { map="channel_flag_default", ts="channel_flag_default", pretty="IsDefault", type="bool" },
    { map="channel_flag_maxclients_unlimited", ts="channel_flag_maxclients_unlimited", pretty="IsMaxClientsUnlimited", type="bool" },
    { map="channel_flag_maxfamilyclients_inherited", ts="channel_flag_maxfamilyclients_inherited", pretty="InheritsMaxFamilyClients", type="bool" },
    { map="channel_flag_maxfamilyclients_unlimited", ts="channel_flag_maxfamilyclients_unlimited", pretty="IsMaxFamilyClientsUnlimited", type="bool" },
    { map="channel_flag_password", ts="channel_flag_password", pretty="HasPassword", type="bool" },
    { map="channel_flag_permanent", ts="channel_flag_permanent", pretty="IsPermanent", type="bool" },
    { map="channel_flag_private", ts="channel_flag_private", pretty="IsPrivate", type="bool" },
    { map="channel_flag_semi_permanent", ts="channel_flag_semi_permanent", pretty="IsSemiPermanent", type="bool" },
    { map="channel_forced_silence", ts="channel_forced_silence", pretty="ForcedSilence", type="bool" },
    { map="channel_icon_id", ts="channel_icon_id", pretty="IconId", type="IconHash" },
    { map="channel_maxclients", ts="channel_maxclients", pretty="MaxClients", type="i32" }, # should be u16, but teamspeak sometimes sends '-1'
    { map="channel_maxfamilyclients", ts="channel_maxfamilyclients", pretty="MaxFamilyClients", type="i32" }, # should be u16, but teamspeak sometimes sends '-1'
    { map="channel_name", ts="channel_name", pretty="Name", type="str" },
    { map="channel_name_phonetic", ts="channel_name_phonetic", pretty="PhoneticName", type="str" },
    { map="channel_needed_subscribe_power", ts="channel_needed_subscribe_power", pretty="NeededSubscribePower", type="i32" },
    { map="channel_needed_talk_power", ts="channel_needed_talk_power", pretty="NeededTalkPower", type="i32" },
    { map="channel_order", ts="channel_order", pretty="Order", type="ChannelId" },
    { map="channel_password", ts="channel_password", pretty="Password", type="str" },
    { map="channel_security_salt", ts="channel_security_salt", pretty="PasswordSalt", type="str" },
    { map="channel_topic", ts="channel_topic", pretty="Topic", type="str" },
    { map="channel_unique_identifier", ts="channel_unique_identifier", pretty="Guid", type="str" },
    { map="cid", ts="cid", pretty="ChannelId", type="ChannelId" },
    { map="cldbid", ts="cldbid", pretty="ClientDbId", type="ClientDbId" },
    { map="clid", ts="clid", pretty="ClientId", type="ClientId" },
    { map="client_away", ts="client_away", pretty="IsAway", type="bool" },
    { map="client_away_message", ts="client_away_message", pretty="AwayMessage", type="str" },
    { map="client_badges", ts="client_badges", pretty="Badges", type="str" },
    { map="client_signed_badges", ts="client_signed_badges", pretty="SignedBadges", type="str" },
    { map="client_base64HashClientUID", ts="client_base64HashClientUID", pretty="Base64HashClientUid", type="str" },
    { map="client_channel_group_id", ts="client_channel_group_id", pretty="ChannelGroup", type="ChannelGroupId" },
    { map="client_channel_group_inherited_channel_id", ts="client_channel_group_inherited_channel_id", pretty="InheritedChannelGroupFromChannel", type="ChannelId" },
    { map="client_channel_id", ts="client_channel_id", pretty="ChannelId", type="ChannelId" },
    { map="client_country", ts="client_country", pretty="CountryCode", type="str" },
    { map="client_created", ts="client_created", pretty="CreationDate", type="DateTime" },
    { map="client_database_id", ts="client_database_id", pretty="DatabaseId", type="ClientDbId" },
    { map="client_default_channel", ts="client_default_channel", pretty="DefaultChannel", type="str" },
    { map="client_default_channel_password", ts="client_default_channel_password", pretty="DefaultChannelPassword", type="str" },
    { map="client_default_token", ts="client_default_token", pretty="DefaultToken", type="str" },
    { map="client_description", ts="client_description", pretty="Description", type="str" },
    # ?? string ??
    { map="client_flag_avatar", ts="client_flag_avatar", pretty="AvatarHash", type="str" },
    { map="client_flag_talking", ts="client_flag_talking", pretty="IsTalking", type="bool" },
    { map="client_icon_id", ts="client_icon_id", pretty="IconId", type="IconHash" },
    { map="client_id", ts="client_id", pretty="ClientId", type="ClientId" },
    { map="client_idle_time", ts="client_idle_time", pretty="ClientIdleTime", type="DurationMilliseconds" },
    { map="client_input_hardware", ts="client_input_hardware", pretty="InputHardwareEnabled", type="bool" },
    { map="client_input_muted", ts="client_input_muted", pretty="InputMuted", type="bool" },
    { map="client_integrations", ts="client_integrations", pretty="Integrations", type="str" }, # type guessed
    { map="client_active_integrations_info", ts="client_active_integrations_info", pretty="ActiveIntegrationsInfo", type="str" }, # type guessed
    { map="client_is_channel_commander", ts="client_is_channel_commander", pretty="IsChannelCommander", type="bool" },
    { map="client_is_priority_speaker", ts="client_is_priority_speaker", pretty="IsPrioritySpeaker", type="bool" },
    { map="client_is_recording", ts="client_is_recording", pretty="IsRecording", type="bool" },
    { map="client_is_talker", ts="client_is_talker", pretty="TalkPowerGranted", type="bool" },
    { map="client_key_offset", ts="client_key_offset", pretty="ClientKeyOffset", type="u64" },
    { map="client_lastconnected", ts="client_lastconnected", pretty="LastConnected", type="DateTime" },
    { map="client_lastip", ts="client_lastip", pretty="LastIp", type="str" },
    { map="client_login_name", ts="client_login_name", pretty="LoginName", type="str" },
    { map="client_login_password", ts="client_login_password", pretty="LoginPassword", type="str" },
    { map="client_meta_data", ts="client_meta_data", pretty="Metadata", type="str" },
    { map="client_month_bytes_downloaded", ts="client_month_bytes_downloaded", pretty="MonthlyDownloadQuota", type="i64" },
    { map="client_month_bytes_uploaded", ts="client_month_bytes_uploaded", pretty="MonthlyUploadQuota", type="i64" },
    { map="client_myteamspeak_id", ts="client_myteamspeak_id", pretty="MyTeamSpeakId", type="str" }, # type guessed
    { map="client_myteamspeak_avatar", ts="client_myteamspeak_avatar", pretty="MyTeamSpeakAvatar", type="str" }, # type guessed
    { map="client_needed_serverquery_view_power", ts="client_needed_serverquery_view_power", pretty="NeededServerqueryViewPower", type="i32" },
    { map="client_nickname", ts="client_nickname", pretty="Name", type="str" },
    { map="client_nickname_phonetic", ts="client_nickname_phonetic", pretty="PhoneticName", type="str" },
    { map="client_origin_server_id", ts="client_origin_server_id", pretty="OriginServerId", type="u64" },
    { map="client_output_hardware", ts="client_output_hardware", pretty="OutputHardwareEnabled", type="bool" },
    { map="client_output_muted", ts="client_output_muted", pretty="OutputMuted", type="bool" },
    { map="client_outputonly_muted", ts="client_outputonly_muted", pretty="OutputOnlyMuted", type="bool" },
    { map="client_platform", ts="client_platform", pretty="ClientPlatform", type="str" },
    { map="client_security_hash", ts="client_security_hash", pretty="SecurityHash", type="str" },
    { map="client_server_password", ts="client_server_password", pretty="Password", type="str" },
    { map="client_servergroups", ts="client_servergroups", pretty="ServerGroups", type="ServerGroupId", mod="array" },
    { map="client_talk_power", ts="client_talk_power", pretty="TalkPower", type="i32" },
    { map="client_talk_request", ts="client_talk_request", pretty="TalkPowerRequestTime", type="DateTime" },
    { map="client_talk_request_msg", ts="client_talk_request_msg", pretty="TalkPowerRequestMessage", type="str" },
    { map="client_total_bytes_downloaded", ts="client_total_bytes_downloaded", pretty="TotalDownloadQuota", type="i64" },
    { map="client_total_bytes_uploaded", ts="client_total_bytes_uploaded", pretty="TotalUploadQuota", type="i64" },
    { map="client_totalconnections", ts="client_totalconnections", pretty="TotalConnections", type="i32" },
    { map="client_type", ts="client_type", pretty="ClientType", type="ClientType" },
    { map="client_unique_identifier", ts="client_unique_identifier", pretty="Uid", type="Uid" },
    { map="client_unread_messages", ts="client_unread_messages", pretty="UnreadMessages", type="u32" },
    { map="client_version", ts="client_version", pretty="ClientVersion", type="str" },
    { map="client_version_sign", ts="client_version_sign", pretty="ClientVersionSign", type="str" },
    { map="clientftfid", ts="clientftfid", pretty="ClientFileTransferId", type="u16" },
    { map="cluid", ts="cluid", pretty="ClientUid", type="Uid" },
    { map="connection_bandwidth_received_last_minute_control", ts="connection_bandwidth_received_last_minute_control", pretty="BandwidthReceivedLastMinuteControl", type="u64" },
    { map="connection_bandwidth_received_last_minute_keepalive", ts="connection_bandwidth_received_last_minute_keepalive", pretty="BandwidthReceivedLastMinuteKeepalive", type="u64" },
    { map="connection_bandwidth_received_last_minute_speech", ts="connection_bandwidth_received_last_minute_speech", pretty="BandwidthReceivedLastMinuteSpeech", type="u64" },
    { map="connection_bandwidth_received_last_minute_total", ts="connection_bandwidth_received_last_minute_total", pretty="BandwidthReceivedLastMinuteTotal", type="u64" },
    { map="connection_bandwidth_received_last_second_control", ts="connection_bandwidth_received_last_second_control", pretty="BandwidthReceivedLastSecondControl", type="u64" },
    { map="connection_bandwidth_received_last_second_keepalive", ts="connection_bandwidth_received_last_second_keepalive", pretty="BandwidthReceivedLastSecondKeepalive", type="u64" },
    { map="connection_bandwidth_received_last_second_speech", ts="connection_bandwidth_received_last_second_speech", pretty="BandwidthReceivedLastSecondSpeech", type="u64" },
    { map="connection_bandwidth_received_last_second_total", ts="connection_bandwidth_received_last_second_total", pretty="BandwidthReceivedLastSecondTotal", type="u64" },
    { map="connection_bandwidth_sent_last_minute_control", ts="connection_bandwidth_sent_last_minute_control", pretty="BandwidthSentLastMinuteControl", type="u64" },
    { map="connection_bandwidth_sent_last_minute_keepalive", ts="connection_bandwidth_sent_last_minute_keepalive", pretty="BandwidthSentLastMinuteKeepalive", type="u64" },
    { map="connection_bandwidth_sent_last_minute_speech", ts="connection_bandwidth_sent_last_minute_speech", pretty="BandwidthSentLastMinuteSpeech", type="u64" },
    { map="connection_bandwidth_sent_last_minute_total", ts="connection_bandwidth_sent_last_minute_total", pretty="BandwidthSentLastMinuteTotal", type="u64" },
    { map="connection_bandwidth_sent_last_second_control", ts="connection_bandwidth_sent_last_second_control", pretty="BandwidthSentLastSecondControl", type="u64" },
    { map="connection_bandwidth_sent_last_second_keepalive", ts="connection_bandwidth_sent_last_second_keepalive", pretty="BandwidthSentLastSecondKeepalive", type="u64" },
    { map="connection_bandwidth_sent_last_second_speech", ts="connection_bandwidth_sent_last_second_speech", pretty="BandwidthSentLastSecondSpeech", type="u64" },
    { map="connection_bandwidth_sent_last_second_total", ts="connection_bandwidth_sent_last_second_total", pretty="BandwidthSentLastSecondTotal", type="u64" },
    { map="connection_bytes_received_control", ts="connection_bytes_received_control", pretty="BytesReceivedControl", type="u64" },
    { map="connection_bytes_received_keepalive", ts="connection_bytes_received_keepalive", pretty="BytesReceivedKeepalive", type="u64" },
    { map="connection_bytes_received_speech", ts="connection_bytes_received_speech", pretty="BytesReceivedSpeech", type="u64" },
    { map="connection_bytes_received_total", ts="connection_bytes_received_total", pretty="BytesReceivedTotal", type="u64" },
    { map="connection_bytes_sent_control", ts="connection_bytes_sent_control", pretty="BytesSentControl", type="u64" },
    { map="connection_bytes_sent_keepalive", ts="connection_bytes_sent_keepalive", pretty="BytesSentKeepalive", type="u64" },
    { map="connection_bytes_sent_speech", ts="connection_bytes_sent_speech", pretty="BytesSentSpeech", type="u64" },
    { map="connection_bytes_sent_total", ts="connection_bytes_sent_total", pretty="BytesSentTotal", type="u64" },
    { map="connection_client_ip", ts="connection_client_ip", pretty="Ip", type="str" },
    { map="connection_client_port", ts="connection_client_port", pretty="Port", type="u16" },
    { map="connection_client2server_packetloss_control", ts="connection_client2server_packetloss_control", pretty="ClientToServerPacketlossControl", type="f32" },
    { map="connection_client2server_packetloss_keepalive", ts="connection_client2server_packetloss_keepalive", pretty="ClientToServerPacketlossKeepalive", type="f32" },
    { map="connection_client2server_packetloss_speech", ts="connection_client2server_packetloss_speech", pretty="ClientToServerPacketlossSpeech", type="f32" },
    { map="connection_client2server_packetloss_total", ts="connection_client2server_packetloss_total", pretty="ClientToServerPacketlossTotal", type="f32" },
    { map="connection_connected_time", ts="connection_connected_time", pretty="ConnectedTime", type="DurationMilliseconds" },
    { map="connection_filetransfer_bandwidth_received", ts="connection_filetransfer_bandwidth_received", pretty="FiletransferBandwidthReceived", type="u64" },
    { map="connection_filetransfer_bandwidth_sent", ts="connection_filetransfer_bandwidth_sent", pretty="FiletransferBandwidthSent", type="u64" },
    { map="connection_filetransfer_bytes_received_total", ts="connection_filetransfer_bytes_received_total", pretty="FiletransferBytesReceivedTotal", type="u64" },
    { map="connection_filetransfer_bytes_sent_total", ts="connection_filetransfer_bytes_sent_total", pretty="FiletransferBytesSentTotal", type="u64" },
    { map="connection_idle_time", ts="connection_idle_time", pretty="IdleTime", type="DurationMilliseconds" },
    { map="connection_packetloss_total", ts="connection_packetloss_total", pretty="PacketlossTotal", type="f32" },
    { map="connection_packets_received_control", ts="connection_packets_received_control", pretty="PacketsReceivedControl", type="u64" },
    { map="connection_packets_received_keepalive", ts="connection_packets_received_keepalive", pretty="PacketsReceivedKeepalive", type="u64" },
    { map="connection_packets_received_speech", ts="connection_packets_received_speech", pretty="PacketsReceivedSpeech", type="u64" },
    { map="connection_packets_received_total", ts="connection_packets_received_total", pretty="PacketsReceivedTotal", type="u64" },
    { map="connection_packets_sent_control", ts="connection_packets_sent_control", pretty="PacketsSentControl", type="u64" },
    { map="connection_packets_sent_keepalive", ts="connection_packets_sent_keepalive", pretty="PacketsSentKeepalive", type="u64" },
    { map="connection_packets_sent_speech", ts="connection_packets_sent_speech", pretty="PacketsSentSpeech", type="u64" },
    { map="connection_packets_sent_total", ts="connection_packets_sent_total", pretty="PacketsSentTotal", type="u64" },
    { map="connection_ping", ts="connection_ping", pretty="Ping", type="DurationMilliseconds" },
    { map="connection_ping_deviation", ts="connection_ping_deviation", pretty="PingDeviation", type="DurationMilliseconds" },
    { map="connection_server2client_packetloss_control", ts="connection_server2client_packetloss_control", pretty="ServerToClientPacketlossControl", type="f32" },
    { map="connection_server2client_packetloss_keepalive", ts="connection_server2client_packetloss_keepalive", pretty="ServerToClientPacketlossKeepalive", type="f32" },
    { map="connection_server2client_packetloss_speech", ts="connection_server2client_packetloss_speech", pretty="ServerToClientPacketlossSpeech", type="f32" },
    { map="connection_server2client_packetloss_total", ts="connection_server2client_packetloss_total", pretty="ServerToClientPacketlossTotal", type="f32" },
    { map="cpid", ts="cpid", pretty="ParentId", type="ChannelId" },
    { map="cpw", ts="cpw", pretty="ChannelPassword", type="str" },
    { map="created", ts="created", pretty="Created", type="DateTime" },
    { map="ctid", ts="ctid", pretty="TargetChannelId", type="ChannelId" },
    { map="current_speed", ts="current_speed", pretty="CurrentSpeed", type="f32" },
    { map="data", ts="data", pretty="Data", type="str" },
    { map="datetime", ts="datetime", pretty="DateTime", type="DateTime" },
    { map="delete", ts="delete", pretty="Delete", type="bool" },
    { map="desc", ts="desc", pretty="Description", type="str" },
    { map="dirname", ts="dirname", pretty="DirectoryName", type="str" },
    { map="duration@time", ts="duration", pretty="Duration", type="DurationSeconds" },
    { map="duration@list", ts="duration", pretty="Limit", type="u32" }, # integer, size guessed
    # How often a banned client wanted to connect but was denied
    { map="enforcements", ts="enforcements", pretty="Enforcements", type="u32" },
    { map="es", ts="es", pretty="EmptySince", type="DurationSeconds" },
    { map="end", ts="end", pretty="End", type="DateTime" },
    { map="event", ts="event", pretty="EventType", type="str" }, # {server|channel|textserver|textchannel|textprivate}
    { map="fcldbid", ts="fcldbid", pretty="FromClientDbId", type="ClientDbId" },
    { map="file_size", ts="file_size", pretty="FileSize", type="u64" },
    { map="flag", ts="flag", pretty="IsRead", type="bool" },
    { map="flags@channel_ph", ts="flags", pretty="Flags", type="ChannelPermissionHint" },
    { map="flags@client_ph", ts="flags", pretty="Flags", type="ClientPermissionHint" },
    { map="flag_read", ts="flag_read", pretty="IsRead", type="bool" },
    { map="fname", ts="fname", pretty="FromName", type="str" },
    { map="ftkey", ts="ftkey", pretty="FileTransferKey", type="str" },
    { map="force", ts="force", pretty="Force", type="bool" },
    { map="group_id_end", ts="group_id_end", pretty="GroupIdEnd", type="PermissionId" }, # describes how permissions are groupd in the client ui
    { map="hwid", ts="hwid", pretty="HardwareId", type="str" },
    { map="iconid", ts="iconid", pretty="IconId", type="IconHash" },
    { map="id", ts="id", pretty="Id", type="ChannelId" },
    { map="id1", ts="id1", pretty="Id1", type="u64" }, # {ServerGroupId|ClientDbId|ChannelId}
    { map="id2", ts="id2", pretty="Id2", type="u64" }, # {0|ChannelGroupId|ClientDbId}
    { map="ident", ts="ident", pretty="ExternalIdentity", type="str" },
    { map="ip", ts="ip", pretty="Ip", type="IpAddr" },
    { map="instance", ts="instance", pretty="InstanceLog", type="bool" },
    { map="invokerid", ts="invokerid", pretty="InvokerId", type="ClientId" },
    { map="invokercldbid", ts="invokercldbid", pretty="InvokerDatabaseId", type="ClientDbId" },
    { map="invokername", ts="invokername", pretty="InvokerName", type="str" },
    { map="invokeruid", ts="invokeruid", pretty="InvokerUid", type="Uid" },
    { map="lastnickname", ts="lastnickname", pretty="LastNickname", type="str" },
    { map="last_pos", ts="last_pos", pretty="LastOffset", type="u64" }, # integer, size guessed
    { map="lines", ts="lines", pretty="Lines", type="u32" }, # integer, size guessed
    { map="logmsg", ts="logmsg", pretty="LogMessage", type="str" },
    { map="loglevel", ts="loglevel", pretty="LogLevel", type="LogLevel" },
    { map="lt", ts="lt", pretty="LicenseType", type="LicenseType" },
    { map="msg", ts="msg", pretty="Message", type="str" },
    { map="msgid", ts="msgid", pretty="MessageId", type="u32" }, # integer, size guessed
    { map="message", ts="message", pretty="Message", type="str" },
    { map="mytsid", ts="mytsid", pretty="MyTsId", type="str" },
    { map="n", ts="n", pretty="PermissionNegated", type="bool" },
    { map="n_member_addp", ts="n_member_addp", pretty="NeededMemberAddPower", type="i32" },
    { map="n_member_removep", ts="n_member_removep", pretty="NeededMemberRemovePower", type="i32" },
    { map="n_modifyp", ts="n_modifyp", pretty="NeededModifyPower", type="i32" },
    { map="name", ts="name", pretty="Name", type="str" },
    { map="namemode", ts="namemode", pretty="NamingMode", type="GroupNamingMode" },
    { map="newname", ts="newname", pretty="NewName", type="str" },
    { map="nickname", ts="nickname", pretty="Nickname", type="str" },
    { map="oldname", ts="oldname", pretty="OldName", type="str" },
    { map="omega", ts="omega", pretty="Omega", type="str" },
    { map="order", ts="order", pretty="Order", type="ChannelId" },
    { map="overwrite", ts="overwrite", pretty="Overwrite", type="bool" },
    { map="p", ts="p", pretty="PermissionId", type="PermissionId" },
    { map="path", ts="path", pretty="Path", type="str" },
    { map="pattern", ts="pattern", pretty="Pattern", type="str" }, # sometimes Regex/SQL Wilcards
    { map="permid", ts="permid", pretty="PermissionId", type="PermissionId" },
    { map="permnegated", ts="permnegated", pretty="PermissionNegated", type="bool" },
    { map="permsid", ts="permsid", pretty="PermissionNameId", type="str" },
    { map="permskip", ts="permskip", pretty="PermissionSkip", type="bool" },
    { map="permvalue", ts="permvalue", pretty="PermissionValue", type="i32" },
    { map="permname", ts="permname", pretty="PermissionName", type="str" },
    { map="permdesc", ts="permdesc", pretty="PermissionDescription", type="str" },
    { map="pid", ts="pid", pretty="ParentChannelId", type="ChannelId" },
    { map="port", ts="port", pretty="Port", type="u16" },
    { map="proto", ts="proto", pretty="Protocol", type="u8" },
    { map="pv", ts="pv", pretty="ProtocolVersion", type="u16" },
    { map="pw", ts="pw", pretty="Password", type="str" },
    # TODO maybe find better name when know what this is
    { map="pw_clear", ts="pw_clear", pretty="PasswordClear", type="str" },
    { map="reasonid", ts="reasonid", pretty="Reason", type="Reason" },
    { map="reason", ts="reason", pretty="Reason", type="str" },
    { map="reasonmsg", ts="reasonmsg", pretty="ReasonMessage", type="str" },
    { map="resume", ts="resume", pretty="Resume", type="bool" },
    { map="reverse", ts="reverse", pretty="Reverse", type="bool" },
    { map="runtime", ts="runtime", pretty="Runtime", type="DurationSeconds" },
    { map="s", ts="s", pretty="PermissionSkip", type="bool" },
    { map="savedb", ts="savedb", pretty="IsPermanent", type="bool" },
    { map="scgid", ts="scgid", pretty="SourceChannelGroupId", type="ChannelGroupId" },
    { map="seconds_empty", ts="seconds_empty", pretty="DurationEmpty", type="DurationSeconds" },
    { map="seekpos", ts="seekpos", pretty="SeekPosition", type="u64" },
    # ?? type
    { map="sender", ts="sender", pretty="Sender", type="u64" },
    { map="serverftfid", ts="serverftfid", pretty="ServerFileTransferId", type="u16" },
    { map="sgid", ts="sgid", pretty="ServerGroupId", type="ServerGroupId" },
    { map="sgtype", ts="sgtype", pretty="ServerGroupType", type="u32" },  # integer, size guessed
    { map="sid", ts="sid", pretty="ServerId", type="u32" }, # integer, size guessed, maybe own type ServerId ?
    { map="size", ts="size", pretty="Size", type="u64" },
    { map="sizedone", ts="sizedone", pretty="SizeDone", type="i64" },
    { map="sortid", ts="sortid", pretty="SortId", type="i32" },
    { map="ssgid", ts="ssgid", pretty="SourceServerGroupId", type="ServerGroupId" },
    { map="subject", ts="subject", pretty="Subject", type="str" },
    { map="subsystem", ts="subsystem", pretty="Subsystem", type="str" }, # {'voice'|'query'|'filetransfer'}
    { map="status@err", ts="status", pretty="Status", type="Ts3ErrorCode" },
    { map="status@ft", ts="status", pretty="Status", type="i32" },
    { map="start@list", ts="start", pretty="Offset", type="u32" }, # integer, size guessed
    { map="start@tmppw", ts="start", pretty="Start", type="DateTime" },
    { map="t", ts="t", pretty="PermissionType", type="PermissionType" },
    { map="target", ts="target", pretty="TargetClientId", type="ClientId" },
    { map="targetmode@msg", ts="targetmode", pretty="Target", type="TextMessageTargetMode" },
    { map="targetmode@plugin", ts="targetmode", pretty="Target", type="PluginTargetMode" },
    { map="tcgid", ts="tcgid", pretty="TargetChannelGroupId", type="ChannelGroupId" },
    { map="tcid", ts="tcid", pretty="TargetChannelId", type="ChannelId" },
    { map="tcpw", ts="tcpw", pretty="TargetChannelPassword", type="str" },
    { map="tcldbid", ts="tcldbid", pretty="TargetClientDbId", type="ClientDbId" },
    { map="time", ts="time", pretty="Time", type="DurationSeconds" },
    { map="timestamp", ts="timestamp", pretty="Timestamp", type="DateTime" },
    { map="tname", ts="tname", pretty="TargetName", type="str" },
    { map="token", ts="token", pretty="Token", type="str" },
    { map="token_created", ts="token_created", pretty="TokenCreateTime", type="DateTime" },
    { map="token_description", ts="token_description", pretty="TokenDescription", type="str" },
    { map="tokendescription", ts="tokendescription", pretty="TokenDescription", type="str" },
    { map="token_id1", ts="token_id1", pretty="TokenId1", type="u64" }, # {ServerGroup|ChannelGroup}
    { map="tokenid1", ts="tokenid1", pretty="TokenId1", type="u64" }, # {ServerGroup|ChannelGroup}
    { map="token_id2", ts="token_id2", pretty="TokenId2", type="ChannelId" }, # ChannelId
    { map="tokenid2", ts="tokenid2", pretty="TokenId2", type="ChannelId" }, # ChannelId
    { map="token_type", ts="token_type", pretty="TokenType", type="TokenType" },
    { map="tokentype", ts="tokentype", pretty="TokenType", type="TokenType" },
    { map="token1", ts="token1", pretty="Token1", type="str" },
    { map="token2", ts="token2", pretty="Token2", type="str" },
    { map="tokencustomset", ts="tokencustomset", pretty="TokenCustomSet", type="str" },
    { map="total_clients", ts="total_clients", pretty="TotalClients", type="i32" },
    { map="total_clients_family", ts="total_clients_family", pretty="TotalFamilyClients", type="i32" },
    { map="tsgid", ts="tsgid", pretty="TargetServerGroupId", type="ServerGroupId" },
    { map="type@ft", ts="type", pretty="IsFile", type="bool" },
    { map="type@group", ts="type", pretty="GroupType", type="GroupType" },
    { map="uid", ts="uid", pretty="Uid", type="Uid" },
    { map="v", ts="v", pretty="PermissionValue", type="i32" }, # integer, size guessed
    { map="value", ts="value", pretty="Value", type="str" },
    { map="virtualserver_antiflood_points_tick_reduce", ts="virtualserver_antiflood_points_tick_reduce", pretty="AntifloodPointsTickReduce", type="u32" },
    { map="virtualserver_antiflood_points_needed_command_block", ts="virtualserver_antiflood_points_needed_command_block", pretty="AntifloodPointsToCommandBlock", type="u32" },
    { map="virtualserver_antiflood_points_needed_ip_block", ts="virtualserver_antiflood_points_needed_ip_block", pretty="AntifloodPointsToIpBlock", type="u32" },
    { map="virtualserver_antiflood_points_needed_plugin_block", ts="virtualserver_antiflood_points_needed_plugin_block", pretty="AntifloodPointsToPluginBlock", type="u32" },
    { map="virtualserver_ask_for_privilegekey", ts="virtualserver_ask_for_privilegekey", pretty="AskForPrivilegekey", type="bool" },
    { map="virtualserver_autostart", ts="virtualserver_autostart", pretty="Autostart", type="bool" },
    { map="virtualserver_channel_temp_delete_delay_default", ts="virtualserver_channel_temp_delete_delay_default", pretty="TempChannelDefaultDeleteDelay", type="DurationSeconds" },
    { map="virtualserver_channelsonline", ts="virtualserver_channelsonline", pretty="ChannelsOnline", type="u64" },
    { map="virtualserver_client_connections", ts="virtualserver_client_connections", pretty="ClientConnections", type="u64" },
    { map="virtualserver_clientsonline", ts="virtualserver_clientsonline", pretty="ClientsOnline", type="u16" },
    { map="virtualserver_codec_encryption_mode", ts="virtualserver_codec_encryption_mode", pretty="CodecEncryptionMode", type="CodecEncryptionMode" },
    { map="virtualserver_complain_autoban_count", ts="virtualserver_complain_autoban_count", pretty="ComplainAutobanCount", type="u32" },
    { map="virtualserver_complain_autoban_time", ts="virtualserver_complain_autoban_time", pretty="ComplainAutobanTime", type="DurationSeconds" },
    { map="virtualserver_complain_remove_time", ts="virtualserver_complain_remove_time", pretty="ComplainRemoveTime", type="DurationSeconds" },
    { map="virtualserver_created", ts="virtualserver_created", pretty="ServerCreated", type="DateTime" },
    { map="virtualserver_default_channel_group", ts="virtualserver_default_channel_group", pretty="DefaultChannelGroup", type="ChannelGroupId" },
    { map="virtualserver_default_channel_admin_group", ts="virtualserver_default_channel_admin_group", pretty="DefaultChannelAdminGroup", type="ChannelGroupId" },
    { map="virtualserver_default_server_group", ts="virtualserver_default_server_group", pretty="DefaultServerGroup", type="ServerGroupId" },
    { map="virtualserver_download_quota", ts="virtualserver_download_quota", pretty="DownloadQuota", type="u64" },
    { map="virtualserver_flag_password", ts="virtualserver_flag_password", pretty="HasPassword", type="bool" },
    { map="virtualserver_hostbanner_gfx_interval", ts="virtualserver_hostbanner_gfx_interval", pretty="HostbannerGfxInterval", type="DurationSeconds" },
    { map="virtualserver_hostbanner_gfx_url", ts="virtualserver_hostbanner_gfx_url", pretty="HostbannerGfxUrl", type="str" },
    { map="virtualserver_hostbanner_mode", ts="virtualserver_hostbanner_mode", pretty="HostbannerMode", type="HostBannerMode" },
    { map="virtualserver_hostbanner_url", ts="virtualserver_hostbanner_url", pretty="HostbannerUrl", type="str" },
    { map="virtualserver_hostbutton_gfx_url", ts="virtualserver_hostbutton_gfx_url", pretty="HostbuttonGfxUrl", type="str" },
    { map="virtualserver_hostbutton_tooltip", ts="virtualserver_hostbutton_tooltip", pretty="HostbuttonTooltip", type="str" },
    { map="virtualserver_hostbutton_url", ts="virtualserver_hostbutton_url", pretty="HostbuttonUrl", type="str" },
    { map="virtualserver_hostmessage", ts="virtualserver_hostmessage", pretty="Hostmessage", type="str" },
    { map="virtualserver_hostmessage_mode", ts="virtualserver_hostmessage_mode", pretty="HostmessageMode", type="HostMessageMode" },
    { map="virtualserver_icon_id", ts="virtualserver_icon_id", pretty="IconId", type="IconHash" },
    { map="virtualserver_id", ts="virtualserver_id", pretty="VirtualServerId", type="u64" },
    { map="virtualserver_ip", ts="virtualserver_ip", pretty="ServerIp", type="IpAddr", mod="array" },
    { map="virtualserver_log_client", ts="virtualserver_log_client", pretty="LogClient", type="bool" },
    { map="virtualserver_log_query", ts="virtualserver_log_query", pretty="LogQuery", type="bool" },
    { map="virtualserver_log_channel", ts="virtualserver_log_channel", pretty="LogChannel", type="bool" },
    { map="virtualserver_log_permissions", ts="virtualserver_log_permissions", pretty="LogPermissions", type="bool" },
    { map="virtualserver_log_server", ts="virtualserver_log_server", pretty="LogServer", type="bool" },
    { map="virtualserver_log_filetransfer", ts="virtualserver_log_filetransfer", pretty="LogFileTransfer", type="bool" },
    { map="virtualserver_machine_id", ts="virtualserver_machine_id", pretty="MachineId", type="str" },
    { map="virtualserver_max_download_total_bandwidth", ts="virtualserver_max_download_total_bandwidth", pretty="MaxDownloadTotalBandwidth", type="u64" },
    { map="virtualserver_max_upload_total_bandwidth", ts="virtualserver_max_upload_total_bandwidth", pretty="MaxUploadTotalBandwidth", type="u64" },
    { map="virtualserver_maxclients", ts="virtualserver_maxclients", pretty="MaxClients", type="u16" },
    { map="virtualserver_min_android_version", ts="virtualserver_min_android_version", pretty="MinAndroidVersion", type="u32" },
    { map="virtualserver_min_client_version", ts="virtualserver_min_client_version", pretty="MinClientVersion", type="u32" },
    { map="virtualserver_min_clients_in_channel_before_forced_silence", ts="virtualserver_min_clients_in_channel_before_forced_silence", pretty="MinClientsInChannelBeforeForcedSilence", type="u32" },
    { map="virtualserver_min_ios_version", ts="virtualserver_min_ios_version", pretty="MinIosVersion", type="u32" },
    { map="virtualserver_month_bytes_downloaded", ts="virtualserver_month_bytes_downloaded", pretty="BytesDownloadedMonth", type="u64" },
    { map="virtualserver_month_bytes_uploaded", ts="virtualserver_month_bytes_uploaded", pretty="BytesUploadedMonth", type="u64" },
    { map="virtualserver_name", ts="virtualserver_name", pretty="ServerName", type="str" },
    { map="virtualserver_name_phonetic", ts="virtualserver_name_phonetic", pretty="ServerPhoneticName", type="str" },
    { map="virtualserver_needed_identity_security_level", ts="virtualserver_needed_identity_security_level", pretty="IdentitySecurityLevel", type="u8" },
    { map="virtualserver_nickname", ts="virtualserver_nickname", pretty="Nickname", type="str" },
    { map="virtualserver_password", ts="virtualserver_password", pretty="ServerPassword", type="str" },
    { map="virtualserver_platform", ts="virtualserver_platform", pretty="ServerPlatform", type="str" },
    { map="virtualserver_port", ts="virtualserver_port", pretty="VirtualServerPort", type="u16" },
    { map="virtualserver_priority_speaker_dimm_modificator", ts="virtualserver_priority_speaker_dimm_modificator", pretty="PrioritySpeakerDimmModificator", type="f32" },
    { map="virtualserver_query_client_connections", ts="virtualserver_query_client_connections", pretty="QueryConnections", type="u64" },
    { map="virtualserver_queryclientsonline", ts="virtualserver_queryclientsonline", pretty="QueriesOnline", type="u16" },
    { map="virtualserver_reserved_slots", ts="virtualserver_reserved_slots", pretty="ReservedSlots", type="u16" },
    { map="virtualserver_status", ts="virtualserver_status", pretty="VirtualServerStatus", type="str" },
    { map="virtualserver_total_bytes_downloaded", ts="virtualserver_total_bytes_downloaded", pretty="BytesDownloadedTotal", type="u64" },
    { map="virtualserver_total_bytes_uploaded", ts="virtualserver_total_bytes_uploaded", pretty="BytesUploadedTotal", type="u64" },
    { map="virtualserver_total_packetloss_speech", ts="virtualserver_total_packetloss_speech", pretty="PacketlossTotalSpeech", type="f32" },
    { map="virtualserver_total_packetloss_keepalive", ts="virtualserver_total_packetloss_keepalive", pretty="PacketlossTotalKeepalive", type="f32" },
    { map="virtualserver_total_packetloss_control", ts="virtualserver_total_packetloss_control", pretty="PacketlossTotalControl", type="f32" },
    { map="virtualserver_total_packetloss_total", ts="virtualserver_total_packetloss_total", pretty="PacketlossTotal", type="f32" },
    { map="virtualserver_total_ping", ts="virtualserver_total_ping", pretty="PingTotal", type="f32" },
    { map="virtualserver_unique_identifier", ts="virtualserver_unique_identifier", pretty="VirtualServerUid", type="Uid" },
    { map="virtualserver_upload_quota", ts="virtualserver_upload_quota", pretty="UploadQuota", type="u64" },
    { map="virtualserver_uptime", ts="virtualserver_uptime", pretty="Uptime", type="DurationSeconds" },
    { map="virtualserver_version", ts="virtualserver_version", pretty="ServerVersion", type="str" },
    { map="virtualserver_weblist_enabled", ts="virtualserver_weblist_enabled", pretty="WeblistEnabled", type="bool" },
    { map="virtualserver_welcomemessage", ts="virtualserver_welcomemessage", pretty="WelcomeMessage", type="str" },

    # Error stuff
    { map="error_id", ts="id", pretty="Id", type="Ts3ErrorCode" },
    { map="failed_permid", ts="failed_permid", pretty="MissingPermissionId", type="PermissionId" },
    { map="return_code", ts="return_code", pretty="ReturnCode", type="str" },
    { map="extra_msg", ts="extra_msg", pretty="ExtraMessage", type="str" },

    # 3.1
    { map="l", ts="l", pretty="License", type="str" },
    { map="tvd", ts="tvd", pretty="Tvd", type="str" },
    { map="proof", ts="proof", pretty="Proof", type="str" },
    { map="ot", ts="ot", pretty="Ot", type="bool" },

    # TeaSpeak
    { map="virtualserver_country", ts="virtualserver_country_code", pretty="CountryCode", type="str" },
    { map="virtualserver_default_music_group", ts="virtualserver_default_music_group", pretty="DefaultMusicGroup", type="ServerGroupId" },
    { map="root", ts="root", pretty="RootKey", type="str" },
]